let works = []; // üîπ variable qui stocke les donn√©es

fetch('http://localhost:5678/api/works')
  .then(response => {
    if (!response.ok) {
      throw new Error('Erreur r√©seau');
    }
    return response.json();
  })
  .then(data => {
    works = data; // ‚úÖ on stocke les donn√©es ici
    console.log('Donn√©es r√©cup√©r√©es :', works);
    afficherWorks(works); // Fonction √† √©crire 
  })
  .catch(error => {
    console.error('Erreur:', error);
  });
  
//PARTIE 1 VIDER LE CONTENU DE LA GALERIE
    // il faut afficher pour chaque √©l√©ments, une image et une caption
function afficherWorks(works) {
//r√©cup√©rer les balises img et figcaption
    const gallery = document.querySelector(".gallery");

//supprimer le contenu de gallery
  gallery.innerHTML = ""

//r√©cuperer la source de l'image et la caption de chaque √©l√©ment du tableau 
works.forEach((element)=>{
const imgSrc = element.imageUrl
const captionElement = element.title

//recr√©er les balises
const figure = document.createElement("figure")
const img = document.createElement("img")
const caption = document.createElement("figcaption")

//injecter la source de l'image dans la balise img et la caption pour chaque √©l√©ment
img.src= imgSrc
caption.innerText = captionElement

//injecter les balises image et figcaption dans la balise figure
figure.appendChild(img)
figure.appendChild(caption)
//impl√©menter dans la partie gallery de HTML
gallery.appendChild(figure)

  })}
